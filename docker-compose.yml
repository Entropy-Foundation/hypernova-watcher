services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"

  hn-listener:
    build:
      context: ./hypernova-listener
      dockerfile: Dockerfile
    container_name: hn-listener
    restart: always   
    depends_on:
      - kafka
  
  committer:
    build:
      context: ./committer  # Path to the consumer app directory
      dockerfile: Dockerfile    # Make sure the Dockerfile is in the consumer app folder
    container_name: data-committer
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: "kafka:9092"    

  supra-listener:
    build:
      context: ./hypernova-supra-listener  # Path to your TypeScript project
      dockerfile: Dockerfile  # Dockerfile for your TypeScript app
    container_name: supra-listener
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: "kafka:9092"